#autorun
{unless $patched
   {set $syscfg_init_size {size {find $syscfg ui init}}}
   {set $new_command {elem {elem {find $syscfg ui init} 320} 0}}
   {func find_ui_elem
      ($search)
      {foreach_int $num 1 $syscfg_init_size
         {if
            {&&
               {== {elem {elem {find $syscfg ui init} $num} 0} $new_command}
               {== {elem {elem {find $syscfg ui init} $num} 2} $search}
            }
            {set $fue_res $num}
         }
      }
      $fue_res
   }
   {switch {elem {find $syscfg objects OvershellDir types overshell_slot get_native_platform} 1}
      (xbox {set $is_xbox TRUE})
      (ps3 {set $is_ps3 TRUE})
      (wii {set $is_wii TRUE})
   }
   {set $guitar_map_array {array ()}}
   {set $keys_map_array {array ()}}
   {set $vocals_map_array {array ()}}
   {foreach_int $elem 1 {size {find $syscfg joypad instrument_mapping}}
      {switch {elem {elem {find $syscfg joypad instrument_mapping} $elem} 1}
         (kControllerGuitar {push_back $guitar_map_array $elem})
         (kControllerKeys {push_back $keys_map_array $elem})
         (kControllerVocals {push_back $vocals_map_array $elem})
      }
   }
   {if_else $is_wii
      {do
         {set $cnt_slot1 kPad_Circle}
         {set $cnt_slot2 kPad_DRight}
         {set $cnt_slot3 kPad_X}
         {set $cnt_slot4 kPad_Square}
         {set $cnt_slot5 kPad_Tri}
         {set $cnt_star kPad_DLeft}
         {set_elem {find $syscfg beatmatcher controller wii_remote slots} 1 {` $cnt_slot1 }}
         {set_elem {find $syscfg beatmatcher controller wii_remote slots} 3 {` $cnt_slot2 }}
         {set_elem {find $syscfg beatmatcher controller wii_remote slots} 5 {` $cnt_slot3 }}
         {set_elem {find $syscfg beatmatcher controller wii_remote slots} 7 {` $cnt_slot4 }}
         {set_elem {find $syscfg beatmatcher controller wii_remote slots} 9 {` $cnt_slot5 }}
         {set_elem {find $syscfg beatmatcher controller wii_remote force_mercury} 1 {` $cnt_star }}
      }
      {do
         {set $pad_map 1}
         {set $cnt_slot1 kPad_L2}
         {set $cnt_slot2 kPad_L1}
         {set $cnt_slot3 kPad_R1}
         {set $cnt_slot4 kPad_R2}
         {set $cnt_slot5 kPad_X}
         {set $cnt_star kPad_Select}
         {set_elem {find $syscfg beatmatcher controller joypad slots} 1 {` $cnt_slot1 }}
         {set_elem {find $syscfg beatmatcher controller joypad slots} 3 {` $cnt_slot2 }}
         {set_elem {find $syscfg beatmatcher controller joypad slots} 5 {` $cnt_slot3 }}
         {set_elem {find $syscfg beatmatcher controller joypad slots} 7 {` $cnt_slot4 }}
         {set_elem {find $syscfg beatmatcher controller joypad slots} 9 {` $cnt_slot5 }}
         {set_elem {find $syscfg beatmatcher controller joypad force_mercury} 1 {` $cnt_star }}

      }
   }
   {set $guitar_map kControllerGuitar}
   {set $keys_map kControllerKeys}
   {set $vocals_map kControllerVocals}
   {set $speedmod 1}
   {set $trackspeed_guitar 1}
   {set $trackspeed_bass 1}
   {set $trackspeed_drum 1}
   {set $trackspeed_keys 1}
   {set $trackspeed_real_keys 1}
   {set $trackspeed_real_guitar 1}
   {set $trackspeed_real_bass 1}
   {set $whammypb TRUE}
   {set $scrbloom TRUE}
   {set $camerashake TRUE}
   {set $fxdof TRUE}
   {set $scrnoise TRUE}
   {set $mbblend TRUE}
   {set $emulatefps 30}
   {set $vsyncrate 1}
   {set_elem {find $syscfg beatmatcher watcher pitch_bend_range} 1 {` $whammypb }}
   {set_elem {find $syscfg beatmatcher watcher cymbal_autoplay_ms} 1 {` {if_else $cymbal_ap 90 0} }}
   {set_elem {find $syscfg beatmatcher watcher trill_interval_ms} 1
      {`
         (
            {if_else $no_lanes -100 0}
            {if_else $no_lanes -100 0}
            {cond
               ($no_lanes -100)
               ($rb4_lanes 190)
               165
            }
            {cond
               ($no_lanes -100)
               ($rb4_lanes 190)
               165
            }
         )
      }
   }
   {foreach $inst (drum guitar bass real_guitar real_guitar_22 real_bass real_bass_22 real_keys)
      {if_else {== $inst drum}
         {do
            {resize {find $syscfg beatmatcher watcher roll_interval_ms $inst single_lane} 1}
            {push_back {find $syscfg beatmatcher watcher roll_interval_ms $inst single_lane}
               {`
                  (
                     {if_else $no_lanes -100 0}
                     {if_else $no_lanes -100 0}
                     {cond
                        ($no_lanes -100)
                        ($rb4_lanes 190)
                        165
                     }
                     {cond
                        ($no_lanes -100)
                        ($rb4_lanes 190)
                        165
                     }
                  )
               }
            }
            {resize {find $syscfg beatmatcher watcher roll_interval_ms $inst double_lane} 1}
            {push_back {find $syscfg beatmatcher watcher roll_interval_ms $inst double_lane}
               {`
                  (
                     {if_else $no_lanes -100 0}
                     {if_else $no_lanes -100 0}
                     {if_else $no_lanes -100 255}
                     {if_else $no_lanes -100 255}
                  )
               }
            }
         }
         {do
            {resize {find $syscfg beatmatcher watcher roll_interval_ms $inst} 1}
            {push_back {find $syscfg beatmatcher watcher roll_interval_ms $inst}
               {`
                  (
                     {if_else $no_lanes -100 0}
                     {if_else $no_lanes -100 0}
                     {cond
                        ($no_lanes -100)
                        ($rb4_lanes 190)
                        165
                     }
                     {cond
                        ($no_lanes -100)
                        ($rb4_lanes 190)
                        165
                     }
                  )
               }
            }
         }
      }
   }
   {func plat_offset
      ($var $xbox_off $wii_off)
      {cond
         ($is_xbox {+ $var $xbox_off})
         ($is_wii {+ $var $wii_off})
         $var
      }
   }
   {func set_graphics
      ($loc)
      {if $loc
         {set $lastloc $loc}
      }
      {rnd set_sync $vsyncrate}
      {if $lastloc
         {if $blackbg
            {$loc set_showing FALSE}
         }
         {if $knuckles
            {$loc iterate Mat $m {$m set color {pack_color 1 0 0}}}
         }
         {$loc iterate PostProc $p
            {if {|| {!= $emulatefps 30} {if $prevfps {!= $prevfps $emulatefps}}}
               {$p set emulate_fps $emulatefps}
            }
            {set $prevfps $emulatefps}
            {unless $scrnoise {$p set noise_intensity 0}}
            {unless $mbblend
               {$p set motion_blur_blend 0}
               {$p set motion_blur_weight 0}
            }
            {unless $scrbloom {$p set bloom_intensity 0}}
         }
         {$loc iterate WorldDir $wd
            {if $knuckles
               {$wd iterate Mat $m {$m set color {pack_color 1 0 0}}}
               {$wd iterate BandCharacter $bc {$bc iterate Mat $m {$m set color {pack_color 1 0 0}}}}
            }
            {$wd iterate BandCamShot $bcs
               {unless $fxdof
                  {$bcs set use_depth_of_field FALSE}
               }
               {unless $camerashake
                  {foreach_int $i 0 {$bcs size (keyframes)}
                     {$bcs set (keyframes $i shake_noisefreq) 0}
                     {$bcs set (keyframes $i shake_noiseamp) 0}
                     {if {! $is_wii}
                        {$bcs set (keyframes $i shake_maxangle x) 0}
                        {$bcs set (keyframes $i shake_maxangle y) 0}
                     }
                  }
               }
            }
         }
      }
   }
   ; i tried to rewrite this using foreach, var and ','. it didn't work
   {set_elem {find $syscfg objects view_times drum easy} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.4} $trackspeed_drum} $speedmod} }}
   {set_elem {find $syscfg objects view_times drum medium} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.0} $trackspeed_drum} $speedmod} }}
   {set_elem {find $syscfg objects view_times drum hard} 1 {` {* {/ {if_else $syncdifspeeds 1.2 1.6} $trackspeed_drum} $speedmod} }}
   {set_elem {find $syscfg objects view_times drum expert} 1 {` {* {/ 1.2 $trackspeed_drum} $speedmod} }}
   {set_elem {find $syscfg objects view_times bass easy} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.4} $trackspeed_bass} $speedmod} }}
   {set_elem {find $syscfg objects view_times bass medium} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.0} $trackspeed_bass} $speedmod} }}
   {set_elem {find $syscfg objects view_times bass hard} 1 {` {* {/ {if_else $syncdifspeeds 1.2 1.6} $trackspeed_bass} $speedmod} }}
   {set_elem {find $syscfg objects view_times bass expert} 1 {` {* {/ 1.2 $trackspeed_bass} $speedmod} }}
   {set_elem {find $syscfg objects view_times guitar easy} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.4} $trackspeed_guitar} $speedmod} }}
   {set_elem {find $syscfg objects view_times guitar medium} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.0} $trackspeed_guitar} $speedmod} }}
   {set_elem {find $syscfg objects view_times guitar hard} 1 {` {* {/ {if_else $syncdifspeeds 1.2 1.6} $trackspeed_guitar} $speedmod} }}
   {set_elem {find $syscfg objects view_times guitar expert} 1 {` {* {/ 1.2 $trackspeed_guitar} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_guitar easy} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.4} $trackspeed_real_guitar} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_guitar medium} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.0} $trackspeed_real_guitar} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_guitar hard} 1 {` {* {/ {if_else $syncdifspeeds 1.2 1.6} $trackspeed_real_guitar} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_guitar expert} 1 {` {* {/ 1.2 $trackspeed_real_guitar} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_bass easy} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.4} $trackspeed_real_bass} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_bass medium} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.0} $trackspeed_real_bass} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_bass hard} 1 {` {* {/ {if_else $syncdifspeeds 1.2 1.6} $trackspeed_real_bass} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_bass expert} 1 {` {* {/ 1.2 $trackspeed_real_bass} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_keys easy} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.4} $trackspeed_real_keys} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_keys medium} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.0} $trackspeed_real_keys} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_keys hard} 1 {` {* {/ {if_else $syncdifspeeds 1.2 1.6} $trackspeed_real_keys} $speedmod} }}
   {set_elem {find $syscfg objects view_times real_keys expert} 1 {` {* {/ 1.2 $trackspeed_real_keys} $speedmod} }}
   {set_elem {find $syscfg objects view_times keys easy} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.4} $trackspeed_keys} $speedmod} }}
   {set_elem {find $syscfg objects view_times keys medium} 1 {` {* {/ {if_else $syncdifspeeds 1.2 2.0} $trackspeed_keys} $speedmod} }}
   {set_elem {find $syscfg objects view_times keys hard} 1 {` {* {/ {if_else $syncdifspeeds 1.2 1.6} $trackspeed_keys} $speedmod} }}
   {set_elem {find $syscfg objects view_times keys expert} 1 {` {* {/ 1.2 $trackspeed_keys} $speedmod} }}
   {push_back {find $syscfg beatmatcher callbacks beat}
      {`
         {unless {gamemode in_mode trainer}
            {if $autodeploy
               {beatmatch foreach_active_player $player
                  {if {== {$player instrument} drum}
                     {$player deploy_if_possible}
                  }
               }
            }
         }
      }
   }
   {push_back {find $syscfg objects WorldDir types vignette_shell enter}
      {`
         {do
            {if $knuckles
               {if [scene0]
                  {[scene0] iterate Mat $m {$m set color {pack_color 1 0 0}}}
                  {[scene0] iterate BandCharacter $bc {$bc iterate Mat $m {$m set color {pack_color 1 0 0}}}}
               }
            }
            {if $no_menu_bg
               {if [scene0]
                  {[scene0] set_showing FALSE}
               }
            }
         }
      }
   }
   {push_back
      {find {elem {find $syscfg ui init} {find_ui_elem coop_track_panel}} on_extend}
      {`
         {do
            {if $is_wii {rnd set_in_game {! {== $emulatefps 60}}}}
            {if {&& {> $speedmod 1} {is_leader_local}}
               {beatmatch set_music_speed $speedmod}
               {session send_msg_to_all
                  {`
                     (
                        {do
                           {beatmatch set_music_speed {, $speedmod}}
                           ($display {coop_track_panel find tracker_broadcast_display})
                           {$display set_showing TRUE}
                           {{$display find band_message.lbl} set_showing TRUE}
                           {$display set_challenge_type 3}
                           {$display set_display_type 1}
                           {$display show_brief_band_message
                              {symbol {sprintf " Song speed set to %d%% by host" {int {+ 0.5 {* {, $speedmod} 100}}}}}
                           }
                        }
                     )
                     kNetReliable
                  }
               }
            }
         }
      }
   }
   {push_back
      {elem {find $syscfg ui init} {find_ui_elem world_panel}}
      {`
         (enter
            {set_graphics $this}
         )
      }
   }
   {do
      ($os {find_ui_elem overshell})
      {set_elem {elem {elem {elem {find {elem {find $syscfg ui init} $os} move_slots} 2} 2} 3} 2
         {` {if_else {&& {user_mgr get_user_from_slot 2} {== {{user_mgr get_user_from_slot 2} get_track_type} 3}} 1 2} }
      }
      {resize
         {elem {find {elem {elem {find {elem {find $syscfg ui init} $os} player_panels} 2} 1} 10} 6} 1
      }
      {push_back
         {elem {find {elem {elem {find {elem {find $syscfg ui init} $os} player_panels} 2} 1} 10} 7}
         {`
            {do
               {set $dslot_insts {array (overshell_drums overshell_drums_pro)}}
               {if {&& $any_inst_all_slots {|| {! {exists beatmatch}} {== {ui current_screen} coop_endgame_screen}}}
                  {foreach $inst (overshell_guitar overshell_bass overshell_keys overshell_real_keys overshell_vocal_solo overshell_vocal_harmony)
                     {push_back $dslot_insts {sprint $inst}}
                  }
               }
               {set $gslot_insts {array (overshell_guitar overshell_bass overshell_keys)}}
               {if {&& $any_inst_all_slots {|| {! {exists beatmatch}} {== {ui current_screen} coop_endgame_screen}}}
                  {foreach $inst (overshell_real_keys overshell_vocal_solo overshell_vocal_harmony overshell_drums)
                     {push_back $gslot_insts {sprint $inst}}
                  }
               }
               {set $vslot_insts {array (overshell_vocal_solo overshell_vocal_harmony)}}
               {if {|| {! {exists beatmatch}} {== {ui current_screen} coop_endgame_screen}}
                  {foreach $inst (overshell_guitar overshell_bass overshell_keys overshell_drums overshell_real_keys)
                     {push_back $vslot_insts {sprint $inst}}
                  }
               }
               {set $kslot_insts {array (overshell_real_keys overshell_keys overshell_guitar overshell_bass)}}
               {if {&& $any_inst_all_slots {|| {! {exists beatmatch}} {== {ui current_screen} coop_endgame_screen}}}
                  {foreach $inst (overshell_drums overshell_vocal_solo overshell_vocal_harmony)
                     {push_back $kslot_insts {sprint $inst}}
                  }
               }
               {set $rgslot_insts {array (overshell_real_guitar overshell_real_bass overshell_guitar overshell_bass)}}
               {if {&& $any_inst_all_slots {|| {! {exists beatmatch}} {== {ui current_screen} coop_endgame_screen}}}
                  {foreach $inst (overshell_vocal_solo overshell_vocal_harmony overshell_drums)
                     {push_back $rgslot_insts {sprint $inst}}
                  }
               }
               {switch {{$this get_user} get_controller_type}
                  (kControllerDrum
                     {choose_part.lst set_data $dslot_insts}
                  )
                  (kControllerGuitar
                     {choose_part.lst set_data $gslot_insts}
                  )
                  (kControllerVocals
                     {choose_part.lst set_data $vslot_insts}
                  )
                  (kControllerKeys
                     {choose_part.lst set_data $kslot_insts}
                  )
                  (kControllerRealGuitar
                     {choose_part.lst set_data $rgslot_insts}
                  )
               }
            }
         }
      }
      {set_elem
         {find {find {elem {elem {find {elem {find $syscfg ui init} $os} player_panels} 2} 1} 45} on_cancel} 1
         {`
            {do
               {if {== $os_menu 4}
                  {foreach $elem $guitar_map_array
                     {set_elem {elem {find $syscfg joypad instrument_mapping} $elem} 1 $guitar_map}
                  }
                  {foreach $elem $keys_map_array
                     {set_elem {elem {find $syscfg joypad instrument_mapping} $elem} 1 $keys_map}
                  }
                  {foreach $elem $vocals_map_array
                     {set_elem {elem {find $syscfg joypad instrument_mapping} $elem} 1 $vocals_map}
                  }
                  {foreach $type (analog dualshock)
                     {set_elem {find $syscfg joypad controller_mapping $type} 1 {switch $pad_map (1 joypad) (2 ro_guitar_xbox) (3 hx_drums_xbox) (4 ro_guitar_ps3) (5 guitar)}}
                  }
                  {overshell update_all}
               }
               {if_else $os_menu
                  {set_main_to_lst}
                  {$this show_game_options}
               }
            }
         }
      }
      {push_back
         {find {elem {elem {find {elem {find $syscfg ui init} $os} player_panels} 2} 1} 45}
         {`
            (enter
               {options_extras.lst set_selected 0}
               {options_extras.lst set_data
                  (
                     "Mod Settings"
                     overshell_credits
                     overshell_linking_code
                     overshell_audition
                  )
               }
            )
         }
      }
      {push_back
         {find {elem {elem {find {elem {find $syscfg ui init} $os} player_panels} 2} 1} 45}
         {`
            (BUTTON_DOWN_MSG
               {switch $action
                  (kAction_Left
                     {switch $os_menu
                        (2
                           {switch {options_extras.lst selected_pos}
                              (1
                                 {if {&& {> $speedmod 1} {! {exists beatmatch}}}
                                    {set $speedmod
                                       {- $speedmod 0.05}
                                    }
                                 }
                              )
                              (2
                                 {if {> $trackspeed_guitar 0.50}
                                    {set $trackspeed_guitar
                                       {- $trackspeed_guitar 0.05}
                                    }
                                 }
                              )
                              (3
                                 {if {> $trackspeed_bass 0.50}
                                    {set $trackspeed_bass
                                       {- $trackspeed_bass 0.05}
                                    }
                                 }
                              )
                              (4
                                 {if {> $trackspeed_drum 0.50}
                                    {set $trackspeed_drum
                                       {- $trackspeed_drum 0.05}
                                    }
                                 }
                              )
                              (5
                                 {if {> $trackspeed_keys 0.50}
                                    {set $trackspeed_keys
                                       {- $trackspeed_keys 0.05}
                                    }
                                 }
                              )
                              (6
                                 {if {> $trackspeed_real_guitar 0.50}
                                    {set $trackspeed_real_guitar
                                       {- $trackspeed_real_guitar 0.05}
                                    }
                                 }
                              )
                              (7
                                 {if {> $trackspeed_real_bass 0.50}
                                    {set $trackspeed_real_bass
                                       {- $trackspeed_real_bass 0.05}
                                    }
                                 }
                              )
                              (8
                                 {if {> $trackspeed_real_keys 0.50}
                                    {set $trackspeed_real_keys
                                       {- $trackspeed_real_keys 0.05}
                                    }
                                 }
                              )
                           }
                           {set_speeds_to_lst}
                        )
                        (3
                           {switch {options_extras.lst selected_pos}
                              (0
                                 {set $emulatefps
                                    {switch $emulatefps
                                       (60 30)
                                       (30 {if_else $is_wii 30 24})
                                       (24 15)
                                       (15 12)
                                       (12 6)
                                       1
                                    }
                                 }
                                 {set_gfx_to_lst}
                              )
                              (1
                                 {set $vsyncrate
                                    {switch $vsyncrate
                                       (4 2)
                                       (2 1)
                                       (1 0)
                                       0
                                    }
                                 }
                                 {set_gfx_to_lst}
                                 {rnd set_sync $vsyncrate}
                              )
                           }
                        )
                        (4
                           {switch {options_extras.lst selected_pos}
                              (1 {set $cnt_slot1 {l_set_slot $cnt_slot1}})
                              (2 {set $cnt_slot2 {l_set_slot $cnt_slot2}})
                              (3 {set $cnt_slot3 {l_set_slot $cnt_slot3}})
                              (4 {set $cnt_slot4 {l_set_slot $cnt_slot4}})
                              (5 {set $cnt_slot5 {l_set_slot $cnt_slot5}})
                              (6 {set $cnt_star {l_set_slot $cnt_star}})
                              (7
                                 {set $guitar_map
                                    {switch $guitar_map
                                       (kControllerKeys kControllerVocals)
                                       (kControllerVocals kControllerDrum)
                                       (kControllerDrum kControllerGuitar)
                                       kControllerGuitar
                                    }
                                 }
                              )
                              (8
                                 {set $keys_map
                                    {switch $keys_map
                                       (kControllerKeys kControllerVocals)
                                       (kControllerVocals kControllerDrum)
                                       (kControllerDrum kControllerGuitar)
                                       kControllerGuitar
                                    }
                                 }
                              )
                              (9
                                 {set $vocals_map
                                    {switch $vocals_map
                                       (kControllerKeys kControllerVocals)
                                       (kControllerVocals kControllerDrum)
                                       (kControllerDrum kControllerGuitar)
                                       kControllerGuitar
                                    }
                                 }
                              )
                              (10
                                 {set $pad_map
                                    {switch $pad_map
                                       (5 4)
                                       (4 3)
                                       (3 2)
                                       (2 1)
                                       1
                                    }
                                 }
                                 {set_pad_map}
                              )
                           }
                           {set_cnt_to_lst}
                        )
                     }
                  )
                  (kAction_Right
                     {switch $os_menu
                        (2
                           {switch {options_extras.lst selected_pos}
                              (1
                                 {if {&& {< $speedmod 2.45} {! {exists beatmatch}}}
                                    {set $speedmod
                                       {+ $speedmod 0.05}
                                    }
                                 }
                              )
                              (2
                                 {if {< $trackspeed_guitar 2.45}
                                    {set $trackspeed_guitar
                                       {+ $trackspeed_guitar 0.05}
                                    }
                                 }
                              )
                              (3
                                 {if {< $trackspeed_bass 2.45}
                                    {set $trackspeed_bass
                                       {+ $trackspeed_bass 0.05}
                                    }
                                 }
                              )
                              (4
                                 {if {< $trackspeed_drum 2.45}
                                    {set $trackspeed_drum
                                       {+ $trackspeed_drum 0.05}
                                    }
                                 }
                              )
                              (5
                                 {if {< $trackspeed_keys 2.45}
                                    {set $trackspeed_keys
                                       {+ $trackspeed_keys 0.05}
                                    }
                                 }
                              )
                              (6
                                 {if {< $trackspeed_real_guitar 2.45}
                                    {set $trackspeed_real_guitar
                                       {+ $trackspeed_real_guitar 0.05}
                                    }
                                 }
                              )
                              (7
                                 {if {< $trackspeed_real_bass 2.45}
                                    {set $trackspeed_real_bass
                                       {+ $trackspeed_real_bass 0.05}
                                    }
                                 }
                              )
                              (8
                                 {if {< $trackspeed_real_keys 2.45}
                                    {set $trackspeed_real_keys
                                       {+ $trackspeed_real_keys 0.05}
                                    }
                                 }
                              )
                           }
                           {set_speeds_to_lst}
                        )
                        (3
                           {switch {options_extras.lst selected_pos}
                              (0
                                 {set $emulatefps
                                    {switch $emulatefps
                                       (1 6)
                                       (6 12)
                                       (12 15)
                                       (15 24)
                                       (24 30)
                                       60
                                    }
                                 }
                                 {set_gfx_to_lst}
                              )
                              (1
                                 {set $vsyncrate
                                    {switch $vsyncrate
                                       (1 2)
                                       (2 4)
                                       (4 4)
                                       1
                                    }
                                 }
                                 {set_gfx_to_lst}
                                 {rnd set_sync $vsyncrate}
                              )
                           }
                        )
                        (4
                           {switch {options_extras.lst selected_pos}
                              (1 {set $cnt_slot1 {r_set_slot $cnt_slot1}})
                              (2 {set $cnt_slot2 {r_set_slot $cnt_slot2}})
                              (3 {set $cnt_slot3 {r_set_slot $cnt_slot3}})
                              (4 {set $cnt_slot4 {r_set_slot $cnt_slot4}})
                              (5 {set $cnt_slot5 {r_set_slot $cnt_slot5}})
                              (6 {set $cnt_star {r_set_slot $cnt_star}})
                              (7
                                 {set $guitar_map
                                    {switch $guitar_map
                                       (kControllerGuitar kControllerDrum)
                                       (kControllerDrum kControllerVocals)
                                       (kControllerVocals kControllerKeys)
                                       kControllerKeys
                                    }
                                 }
                              )
                              (8
                                 {set $keys_map
                                    {switch $keys_map
                                       (kControllerGuitar kControllerDrum)
                                       (kControllerDrum kControllerVocals)
                                       (kControllerVocals kControllerKeys)
                                       kControllerKeys
                                    }
                                 }
                              )
                              (9
                                 {set $vocals_map
                                    {switch $vocals_map
                                       (kControllerGuitar kControllerDrum)
                                       (kControllerDrum kControllerVocals)
                                       (kControllerVocals kControllerKeys)
                                       kControllerKeys
                                    }
                                 }
                              )
                              (10
                                 {set $pad_map
                                    {switch $pad_map
                                       (5 4)
                                       (4 3)
                                       (3 2)
                                       (2 1)
                                       1
                                    }
                                 }
                                 {set_pad_map}
                              )
                           }
                           {set_cnt_to_lst}
                        )
                     }
                  )
                  {elem {find $syscfg player handlers deploy} 1} ; kDataUnhandled
               }
            )
         }
      }
      {foreach $item
         (
            ("Mod Settings"
               {set_main_to_lst}
            )
            ("Modifiers"
               {set $os_menu 1}
               {options_extras.lst set_selected 0}
            )
            (("Whammy Pitch Bending: ON" "Whammy Pitch Bending: OFF")
               {set $whammypb {! $whammypb}}
            )
            (("Song Title Always: ON" "Song Title Always: OFF")
               {set $songtitle {! $songtitle}}
            )
            (("No Lanes: ON" "No Lanes: OFF")
               {set $no_lanes {! $no_lanes}}
               {set $rb4_lanes FALSE}
            )
            (("RB4 Lane Behavior: ON" "RB4 Lane Behavior: OFF")
               {set $rb4_lanes {! $rb4_lanes}}
               {set $no_lanes FALSE}
            )
            (("Auto Kick: ON" "Auto Kick: OFF")
               {if_else {exists beatmatch}
                  {passive_messages_panel queue_message {symbol "Unable to adjust here"}}
                  {set $autokick {! $autokick}}
               }
            )
            (("Cymbal Assist: ON" "Cymbal Assist: OFF")
               {set $cymbal_ap {! $cymbal_ap}}
            )
            (("Drum Auto Deploy: ON" "Drum Auto Deploy: OFF")
               {if_else {exists beatmatch}
                  {passive_messages_panel queue_message {symbol "Unable to adjust here"}}
                  {set $autodeploy {! $autodeploy}}
               }
            )
            (("Disable Video Venues: ON" "Disable Video Venues: OFF")
               {set $no_mv_venues {! $no_mv_venues}}
            )
            (("Disable Menu Backgrounds: ON" "Disable Menu Backgrounds: OFF")
               {set $no_menu_bg {! $no_menu_bg}}
            )
            (("& knuckles: ON" "& knuckles: OFF")
               {set $knuckles {! $knuckles}}
            )
            ("Speed Settings"
               {set $os_menu 2}
               {options_extras.lst set_selected 0}
            )
            (("Sync Dificulty Speeds: ON" "Sync Dificulty Speeds: OFF")
               {set $syncdifspeeds {! $syncdifspeeds}}
            )
            ("Graphics Settings"
               {set $os_menu 3}
               {options_extras.lst set_selected 0}
            )
            (("Disable Venues: ON" "Disable Venues: OFF")
               {set $blackbg {! $blackbg}}
            )
            (("Bloom: ON" "Bloom: OFF")
               {set $scrbloom {! $scrbloom}}
            )
            (("Film Grain: ON" "Film Grain: OFF")
               {set $scrnoise {! $scrnoise}}
            )
            (("Camera Shake: ON" "Camera Shake: OFF")
               {set $camerashake {! $camerashake}}
            )
            (("Motion Blur: ON" "Motion Blur: OFF")
               {set $mbblend {! $mbblend}}
            )
            (("Depth of Field: ON" "Depth of Field: OFF")
               {set $fxdof {! $fxdof}}
            )
            ("Controller Settings"
               {set $os_menu 4}
               {options_extras.lst set_selected 0}
            )
            (("Any instrument Any Slot: ON" "Any instrument Any Slot: OFF")
               {set $any_inst_all_slots {! $any_inst_all_slots}}
            )
            ("Other"
               {set $os_menu 5}
               {options_extras.lst set_selected 0}
            )
            (("Disable Practice Fast Restart: ON" "Disable Practice Fast Restart: OFF")
               {set $noselrsrt {! $noselrsrt}}
            )
         )
         {push_back
            {elem {elem {find {elem {elem {find {elem {find $syscfg ui init} $os} player_panels} 2} 1} 45} 2} 2} $item
         }
      }
      {push_back
         {elem {find {elem {elem {find {elem {find $syscfg ui init} $os} player_panels} 2} 1} 45} 2}
         {`
            {switch $os_menu
               (1 {set_modifiers_to_lst})
               (2 {set_speeds_to_lst})
               (3 {set_gfx_to_lst})
               (4 {set_cnt_to_lst})
               (5 {set_other_to_lst})
            }
         }
      }
      {push_back {elem {elem {find {find {elem {elem {find {elem {find $syscfg ui init} $os} player_panels} 2} 1} 7} component_select} 2} 3}
         {`
            (overshell_choose_part
               {do
                  {$this begin_override_flow kOverrideFlow_SongSettings}
                  {$this show_state kState_ChoosePart}
               }
            )
         }
      }
   }
   {func set_main_to_lst
      {set $os_menu 0}
      {options_extras.lst set_selected 0}
      {options_extras.lst set_data
         (
            "Modifiers"
            "Speed Settings"
            "Graphics Settings"
            "Controller Settings"
            "Other"
         )
      }
   }
   {func set_modifiers_to_lst
      {options_extras.lst set_data
         (
            {if_else $whammypb "Whammy Pitch Bending: ON" "Whammy Pitch Bending: OFF"}
            {if_else $songtitle "Song Title Always: ON" "Song Title Always: OFF"}
            {if_else $no_lanes "No Lanes: ON" "No Lanes: OFF"}
            {if_else $rb4_lanes "RB4 Lane Behavior: ON" "RB4 Lane Behavior: OFF"}
            {if_else $autokick "Auto Kick: ON" "Auto Kick: OFF"}
            {if_else $cymbal_ap "Cymbal Assist: ON" "Cymbal Assist: OFF"}
            {if_else $autodeploy "Drum Auto Deploy: ON" "Drum Auto Deploy: OFF"}
            {if_else $no_mv_venues "Disable Video Venues: ON" "Disable Video Venues: OFF"}
            {if_else $no_menu_bg "Disable Menu Backgrounds: ON" "Disable Menu Backgrounds: OFF"}
            {if_else $knuckles "& knuckles: ON" "& knuckles: OFF"}
         )
      }
   }
   {func set_speeds_to_lst
      {options_extras.lst set_data
         (
            {if_else $syncdifspeeds "Sync Dificulty Speeds: ON" "Sync Dificulty Speeds: OFF"}
            {sprintf "- Song Speed: %d% +" {int {+ 0.5 {* $speedmod 100}}}}
            {sprintf "- Guitar: %d% +" {int {+ 0.5 {* $trackspeed_guitar 100}}}}
            {sprintf "- Bass: %d% +" {int {+ 0.5 {* $trackspeed_bass 100}}}}
            {sprintf "- Drums: %d% +" {int {+ 0.5 {* $trackspeed_drum 100}}}}
            {sprintf "- Keys: %d% +" {int {+ 0.5 {* $trackspeed_keys 100}}}}
            {sprintf "- Pro Guitar: %d% +" {int {+ 0.5 {* $trackspeed_real_guitar 100}}}}
            {sprintf "- Pro Bass: %d% +" {int {+ 0.5 {* $trackspeed_real_bass 100}}}}
            {sprintf "- Pro Keys: %d% +" {int {+ 0.5 {* $trackspeed_real_keys 100}}}}
         )
      }
   }
   {func set_gfx_to_lst
      {options_extras.lst set_data
         (
            {sprintf "- Venue FPS: %dFPS +" $emulatefps}
            {sprint "- Vsync Rate: " {switch $vsyncrate (1 "full") (2 "half") (4 "quarter") "infinite"} " +"}
            {if_else $blackbg "Disable Venues: ON" "Disable Venues: OFF"}
            {if_else $fxdof "Depth of Field: ON" "Depth of Field: OFF"}
            {if_else $scrnoise "Film Grain: ON" "Film Grain: OFF"}
            {if_else $scrbloom "Bloom: ON" "Bloom: OFF"}
            {if_else $camerashake "Camera Shake: ON" "Camera Shake: OFF"}
            {if_else $mbblend "Motion Blur: ON" "Motion Blur: OFF"}
         )
      }
   }
   {func set_cnt_to_lst
      {options_extras.lst set_data
         (
            {if_else $any_inst_all_slots "Any instrument Any Slot: ON" "Any instrument Any Slot: OFF"}
            {sprint "- Slot 1: " {get_btn_from_var $cnt_slot1} " +"}
            {sprint "- Slot 2: " {get_btn_from_var $cnt_slot2} " +"}
            {sprint "- Slot 3: " {get_btn_from_var $cnt_slot3} " +"}
            {sprint "- Slot 4: " {get_btn_from_var $cnt_slot4} " +"}
            {sprint "- Slot 5: " {get_btn_from_var $cnt_slot5} " +"}
            {sprint "- Overdrive: " {get_btn_from_var $cnt_star} " +"}
            {sprint "- Guitar in: " {switch $guitar_map (kControllerGuitar "Guitar") (kControllerDrum "Drum") (kControllerVocals "Vocals") (kControllerKeys "Keys")} " Slot +"}
            {sprint "- Keys in: " {switch $keys_map (kControllerGuitar "Guitar") (kControllerDrum "Drum") (kControllerVocals "Vocals") (kControllerKeys "Keys")} " Slot +"}
            {sprint "- Vocals in: " {switch $vocals_map (kControllerGuitar "Guitar") (kControllerDrum "Drum") (kControllerVocals "Vocals") (kControllerKeys "Keys")} " Slot +"}
            {if_else $is_wii " " {sprint "- Pad Mapping: " {switch $pad_map (1 "Custom") (2 "RB Guitar") (3 "Drum") (4 "GH Guitar") (5 "PS2 Guitar")} " +"}}
         )
      }
   }
   {func set_other_to_lst
      {options_extras.lst set_data
         (
            {if_else $noselrsrt "Disable Practice Fast Restart: ON" "Disable Practice Fast Restart: OFF"}
         )
      }
   }
   {func get_btn_from_var
      ($var)
      {switch $var
         (kPad_L2 "LT")
         (kPad_L1 "LB")
         (kPad_R1 "RB")
         (kPad_R2 "RT")
         (kPad_X "A")
         (kPad_Circle "B")
         (kPad_Square {if_else $is_wii "1" "X"})
         (kPad_Tri {if_else $is_wii "2" "Y"})
         (kPad_DUp "Up")
         (kPad_DDown "Down")
         (kPad_DLeft "Left")
         (kPad_DRight "Right")
         (kPad_L3 "LS")
         (kPad_R3 "RS")
         (kPad_Select {if_else $is_wii "-" "Back"})
         "ERROR"
      }
   }
   {func l_set_slot
      ($var)
      {switch $var
         (kPad_L1 kPad_L2)
         (kPad_R1 kPad_L1)
         (kPad_R2 kPad_R1)
         (kPad_X kPad_R2)
         (kPad_Circle kPad_X)
         (kPad_Square kPad_Circle)
         (kPad_Tri kPad_Square)
         (kPad_DUp kPad_Tri)
         (kPad_DDown kPad_DUp)
         (kPad_DLeft kPad_DDown)
         (kPad_DRight kPad_DLeft)
         (kPad_L3 kPad_DRight)
         (kPad_R3 kPad_L3)
         (kPad_Select kPad_R3)
         kPad_L2
      }
   }
   {func r_set_slot
      ($var)
      {switch $var
         (kPad_L2 kPad_L1)
         (kPad_L1 kPad_R1)
         (kPad_R1 kPad_R2)
         (kPad_R2 kPad_X)
         (kPad_X kPad_Circle)
         (kPad_Circle kPad_Square)
         (kPad_Square kPad_Tri)
         (kPad_Tri kPad_DUp)
         (kPad_DUp kPad_DDown)
         (kPad_DDown kPad_DLeft)
         (kPad_DLeft kPad_DRight)
         (kPad_DRight kPad_L3)
         (kPad_L3 kPad_R3)
         (kPad_R3 kPad_Select)
         kPad_Select
      }
   }
   {set_elem {elem {elem {find {elem {find $syscfg ui init} {find_ui_elem part_difficulty_screen}} load_panels} 1} 2} 2
      {`
         {if_else $no_mv_venues
            {do
               ($random_venue {random_elem (VENUES)})
               {gamecfg set_venue $random_venue}
               {meta_performer set_venue $random_venue}
            }
            {meta_performer select_random_venue}
         }
      }
   }
   {set_elem {elem {find $syscfg objects RndDir types mtv_overlay intro_end} 1} 3
      {`
         {if_else {gamemode is_tour}
            {script_task kTaskSeconds
               (delay 7.0)
               (script
                  {if_else $songtitle
                     {fade.anim set_frame 50}
                     {fade.anim animate}
                  }
               )
            }
            {if_else $songtitle
               {fade.anim set_frame 50}
               {fade.anim animate}
            }
         }
      }
   }
   {set_elem {find $syscfg objects RndDir types mtv_overlay setup_text} 1
      {`
         {do
            ($short_name {meta_performer song})
            ($song_data {song_mgr get_meta_data $short_name})
            ($song_text {$song_data title})
            {if_else {> $speedmod 1}
               {song.lbl set_token_fmt {sprint $song_text " (" {int {+ 0.5 {* $speedmod 100}}} "%)"}}
               {song.lbl set_token_fmt {sprint $song_text}}
            }
            {artist.lbl set_artist_name_from_shortname $short_name}
         }
      }
   }
   {set_elem {find {elem {find $syscfg ui init} {find_ui_elem coop_endgame_panel}} set_results} 1
      {`
         {do
            ($short_name {meta_performer get_completed_song})
            ($song_data {song_mgr get_meta_data $short_name})
            ($song_text {$song_data title})
            {if_else {> $speedmod 1}
               {song.lbl set_token_fmt {sprint $song_text " (" {int {+ 0.5 {* $speedmod 100}}} "%)"}}
               {song.lbl set_token_fmt {sprint $song_text}}
            }
         }
      }
   }
   {set_elem {find {elem {find $syscfg ui init} {find_ui_elem lose_panel}} enter} 2
      {`
         {do
            ($short_name {meta_performer song})
            ($song_data {song_mgr get_meta_data $short_name})
            ($song_text {$song_data title})
            {if_else {> $speedmod 1}
               {lose_song_data.lbl set_token_fmt {sprint $song_text " (" {int {+ 0.5 {* $speedmod 100}}} "%)"}}
               {lose_song_data.lbl set_token_fmt {sprint $song_text}}
            }
         }
      }
   }
   {insert_elem {elem {find $syscfg objects OvershellDir types overshell_slot update_in_game_options} 2} 7
      {`
         {if {== {ui current_screen} coop_endgame_screen} {push_back $options overshell_choose_part}}
      }
   }
   {if $is_ps3
      {set_elem {elem {elem {find {elem {find $syscfg ui init} {find_ui_elem practice_sel_section_panel}} goto_next_screen} 1} 2} 4
         {`
            {script_task kTaskUISeconds
               (delay 2)
               (script {ui goto_screen preloading_screen})
            }
         }
      }
      {set_elem {find {elem {find $syscfg ui init} {find_ui_elem sel_speed_panel}} component_select} 5
         {`
            {script_task kTaskUISeconds
               (delay 2)
               (script {ui goto_screen preloading_screen})
            }
         }
      }
   }
   {do
      ($panel {find_ui_elem customize_panel})
      {set_elem {find {elem {find $syscfg ui init} $panel} show_locked_dialog} 1
         {`
            {if {! {closet_mgr is_character_loading}}
               {ui push_screen choose_color_screen}
            }
         }
      }
      {set_elem {find {elem {find {elem {find $syscfg ui init} $panel} component_select} 2} tattoos.btn} 1
         {`
            {do
               {$this store_focus_component}
               {ui goto_screen customize_tattoo_screen}
            }
         }
      }
      {set_elem {find {elem {find {elem {find $syscfg ui init} $panel} component_select} 2} face_paint.btn} 1
         {`
            {do
               {$this store_focus_component}
               {$this prepare_patch_edit kPatchTattoo}
               {$this set_patch_menu_return_state kCustomizeState_HairAndMakeup}
               {$this set_focus_component kCustomizeState_PatchMenu edit.btn}
               {$this set_state kCustomizeState_PatchMenu}
            }
         }
      }
      {if {! $is_wii}
         {set_elem {find {elem {find {elem {find $syscfg ui init} $panel} component_select} 2} premium_assets.lst} 2
            {`
               {do
                  {closet_mgr finalize_changes TRUE {$this in_clothing_state}}
                  {$this leave_state FALSE}
               }
            }
         }
      }
   }
   {push_back {find {elem {find $syscfg ui init} {find_ui_elem practice_panel}} button_down}
      {`
         {if {&& {== $action kAction_ViewModify} {! $noselrsrt}}
            {session end_game kRestart}
         }
      }
   }
   {passive_messages_panel queue_message {symbol "CON Patch by Synchrony loaded succesfully!"}}
   {passive_messages_panel queue_message {symbol "Mod settings can be adjusted in extras"}}
   {passive_messages_panel queue_message {symbol "Some scripting uses some elements from RB3 Deluxe by MiloHax"}}
   {do
      ($int {random_int 0 1000000})
      {switch $int
         (2112 {passive_messages_panel queue_message {symbol "I missed the part where that's my problem"}})
         (10516 {passive_messages_panel queue_message {symbol "go play amplitude on the ps2"}})
         (32503 {passive_messages_panel queue_message {symbol "go play frequency on the ps2"}})
         (42319 {passive_messages_panel queue_message {symbol "hold up gamer please"}})
      }
   }
   {set $patched TRUE}
}