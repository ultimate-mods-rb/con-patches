#ifdef TITLEID_ROCK_BAND_2
(conpatch
   (name "2951257")
   (artist "music")
   (master TRUE)
   (context 1026)
   (song
     (name        "songs/conpatch/conpatch")
     (tracks
        ((drum (0 1))
         (bass 2)
         (guitar (3))
         (vocals (4))
        )
     )
     (pans        (  0.0  -1.0  1.0   -1.0  1.0   0.0 ))
     (vols        ( -1.0  -3.5 -3.5   -5.0 -5.0  -4.0 ))
     (cores       (  -1    -1   -1     -1   -1    -1  ))
     (drum_solo
        (seqs (kick.cue snare.cue tom1.cue tom2.cue crash.cue))
     )
     (drum_freestyle
        (seqs (kick.cue snare.cue hat.cue ride.cue crash.cue))
     )
     (midi_file "songs/conpatch/conpatch.mid")
     (hopo_threshold 90)
   )
   (song_scroll_speed 2300)
   (bank sfx/tambourine_bank.milo)
   (anim_tempo kTempoSlow)
   (preview 2 4)
   (rank
      (drum 1)
      (guitar 1)
      (bass 1)
      (vocals 1)
      (band 1)
   )
   (genre trash)
   (decade the00s)
   (vocal_gender male)

   (format 5)
   (version 3)
   (fake TRUE)   
   ; harmonix i really see why you moved away from dta. what the fuck were you thinking when you made such a vulnerable scripting language. 
   (downloaded
      {do
         {unless $patched
            {set $is_xbox #ifdef HX_XBOX TRUE #else FALSE #endif}
            {unless {== {elem {find $syscfg system language force} 1} eng}
               {set $eur TRUE}
            }
            {func plat_offset
               ($var $xbox_off $xbox_eur_off)
               {cond
                  ({&& $is_xbox $eur}
                     {+ $var $xbox_eur_off}
                  )
                  ({&& $is_xbox {! $eur}}
                     {+ $var $xbox_off}
                  )
                  ({&& {! $is_xbox} $eur}
                     {+ $var 1}
                  )
                  $var
               }
            }
            ;start of init vars
            {set $modpanel {plat_offset 234 -6 -3}}
            {set $trackspeed 1.0}
            {set $speedmod 1.0}
            {set $hwlength 1.0} ; awesomeness actually
            {set $scrbloom TRUE}
            {set $camerashake TRUE}
            {set $fxdof TRUE}
            {set $scrnoise TRUE}
            {set $mbblend TRUE}
            {set $emulatefps 24}
            {set $trkmuting TRUE}
            {set $whammypb TRUE}
            {set $misssounds TRUE}
            {set $fcring TRUE}
            {set $vsyncrate 1}
            {set $pad_inst 1}
            {set $pad_map 1}
            {set $cnt_slot1 kPad_L2}
            {set $cnt_slot2 kPad_L1}
            {set $cnt_slot3 kPad_R1}
            {set $cnt_slot4 kPad_R2}
            {set $cnt_slot5 kPad_X}
            {set $cnt_star kPad_Select}
            {set $cheat_skip_ugc_membership_check TRUE}
            {set_elem {find $syscfg beatmatcher controller joypad slots} 1 {` $cnt_slot1 }}
            {set_elem {find $syscfg beatmatcher controller joypad slots} 3 {` $cnt_slot2 }}
            {set_elem {find $syscfg beatmatcher controller joypad slots} 5 {` $cnt_slot3 }}
            {set_elem {find $syscfg beatmatcher controller joypad slots} 7 {` $cnt_slot4 }}
            {set_elem {find $syscfg beatmatcher controller joypad slots} 9 {` $cnt_slot5 }}
            {set_elem {find $syscfg beatmatcher controller joypad force_mercury} 1 {` $cnt_star }}
            {foreach $type (analog dualshock)
               {set_elem {find $syscfg joypad instrument_mapping $type} 1 {` {switch $pad_inst (1 kControllerVocals) (2 kControllerGuitar) (3 kControllerDrum)} }}
            }
            {insert_elems {find $syscfg beatmatcher controller #ifdef HX_XBOX hx_drums_xbox #else hx_drums_ps3 #endif slots} 1 {` ({if_else $secondkick kPad_R1 69} 0) }}
            {set_elem {find $syscfg modes defaults unlock_song_initial_num} 1 3000}
            {set_elem {find $syscfg modes defaults show_loading_images} 1 TRUE}
            {push_back {find $syscfg modes jukebox} (show_loading_images FALSE)} ; causes the game to crash on load most of the time
            {set_elem {find $syscfg modes jukebox force_player_vocal_gender} 1 FALSE}
            {set_elem {find $syscfg beatmatcher watcher pitch_bend_range} 1 {` $whammypb }}
            {set_elem {find $syscfg beatmatcher audio mute_volume} 1 {` {if_else $trkmuting -96.0 -0.001} }}
            {set_elem {find $syscfg sound slider} 1 -96}
            {set_elem {find $syscfg tour default_difficulty} 1 kDifficultyExpert}
            {foreach_int $char 1 100
               {push_back {elem {find $syscfg characters prefab} $char} (selectable TRUE)}
            }
            {push_back {find $syscfg objects OutfitLoader types female category legs outfits}
               (naked
                  (genre shell_shop_thriftstore)
                  (cost 0)
               )
            }
            ;{foreach_int $num 1 1000
            ;   {if {find {elem {find $syscfg ui init} $num} ok_with_leaderboards_offline}
            ;      {$this save_objects {sprint #ifdef HX_XBOX "GAME:/" #else "GD:/dev_hdd0/game/BLUS30050/USRDIR/" #endif $num ".milo"}}
            ;      ;{run {sprint #ifdef HX_XBOX "GAME:/" #else "GD:/dev_hdd0/game/BLUS30050/USRDIR/" #endif $num}}
            ;   }
            ;}
            {resize {elem {elem {find $syscfg ui init} $modpanel} 5} 0}
            {push_back {elem {elem {find $syscfg ui init} $modpanel} 5} pos}
            {resize {elem {elem {find $syscfg ui init} $modpanel} 6} 0}
            {push_back {elem {elem {find $syscfg ui init} $modpanel} 6} menu}
            {push_back {elem {find $syscfg ui init} $modpanel}
               {`
                  (ret )
               }
            }
            {func
               set_main_to_lst
               {set [menu] 0}
               {set [pos] 0}
               {title.lbl set text_token "Mod Settings"}
               {channels.lst set_data ("Modifiers" "Speed Settings" "Graphics Settings" "Controller Settings" "Other")}
               {if [ret]
                  {set [pos] [ret]}
                  {channels.lst set_selected [pos]}
               }
            }
            {func
               set_modifiers_to_lst
               {set [menu] 1}
               {title.lbl set text_token "Modifiers"}
               {channels.lst set_data
                  (
                     {if_else $whammypb "Whammy Pitch Bending: ON" "Whammy Pitch Bending: OFF"}
                     {if_else $trkmuting "Track Muting: ON" "Track Muting: OFF"}
                     {if_else $legacybass "Legacy Bass Streak: ON" "Legacy Bass Streak: OFF"}
                     {if_else $fcring "Show FC Ring: ON" "Show FC Ring: OFF"}
                     {if_else $yourmonies "Infinite Money: ON" "Infinite Money: OFF"}
                     {if_else $songtitle "Song Title Always: ON" "Song Title Always: OFF"}
                     {if_else $autokick "Auto Kick: ON" "Auto Kick: OFF"}
                     {if_else {modifier_mgr is_modifier_active mod_nofail} "No Fail Mode: ON" "No Fail Mode: OFF"}
                     {if_else {modifier_mgr is_modifier_active mod_doublespeed} "Breakneck Speed: ON" "Breakneck Speed: OFF"}
                     {if_else {modifier_mgr is_modifier_active mod_choose_venue} "Select Venue Screen: ON" "Select Venue Screen: OFF"}
                     {if_else {modifier_mgr is_modifier_active mod_nohud} "Performance Mode: ON" "Performance Mode: OFF"}
                     {if_else {modifier_mgr is_modifier_active mod_newvenuesonly} "New Venues Only: ON" "New Venues Only: OFF"}
                     {if_else {modifier_mgr is_modifier_active mod_demomode} "Stage Mode: ON" "Stage Mode: OFF"}
                     {if_else $bigmode "Big Mode: ON" "Big Mode: OFF"}
                     {if_else $smallworld "Small World: ON" "Small World: OFF"}
                     {if_else $greennday "Green Day: ON" "Green Day: OFF"}
                     {if_else $hide_chars "Hide Chars: ON" "Hide Chars: OFF"}
                     {if_else {modifier_mgr is_modifier_active mod_awesome} "Awesomeness Detection: ON" "Awesomeness Detection: OFF"}
                  )
               }
            }
            {func
               set_speeds_to_lst
               {set [menu] 2}
               {title.lbl set text_token "Speed Settings"}
               {channels.lst set_data
                  (
                     {if_else $syncdifspeeds "Sync Dificulty Speeds: ON" "Sync Dificulty Speeds: OFF"}
                     {sprintf "- Song Speed: %d% +" {int {+ 0.5 {* $speedmod 100}}}}
                     {sprintf "- Track Speed: %d% +" {int {+ 0.5 {* $trackspeed 100}}}}
                  )
               }
            }
            {func
               set_gfx_to_lst
               {set [menu] 3}
               {title.lbl set text_token "Graphics Settings"}
               {channels.lst set_data
                  (
                     {if_else $blackbg "Disable Venues: ON" "Disable Venues: OFF"}
                     {sprintf "- Venue FPS: %dFPS +" $emulatefps}
                     {sprint "- Vsync Rate: " {switch $vsyncrate (1 "full") (2 "half") (4 "quarter") "infinite"} " +"}
                     {if_else $fxdof "Depth of Field: ON" "Depth of Field: OFF"}
                     {if_else $scrnoise "Film Grain: ON" "Film Grain: OFF"}
                     {if_else $scrbloom "Bloom: ON" "Bloom: OFF"}
                     {if_else $camerashake "Camera Shake: ON" "Camera Shake: OFF"}
                     {if_else $mbblend "Motion Blur: ON" "Motion Blur: OFF"}
                  )
               }
            }
            {func
               set_cnt_to_lst
               {set [menu] 4}
               {title.lbl set text_token "Controller Settings"}
               {channels.lst set_data
                  (
                     {if_else $secondkick "Second Kick Mapping: ON" "Second Kick Mapping: OFF"}
                     {sprint "- Pad is: " {switch $pad_inst (1 "Vocals") (2 "Guitar") (3 "Drum")} " +"}
                     {sprint "- Pad Mapping: " {switch $pad_map (1 "Custom") (2 "RB Guitar") (3 "Drum") (4 "GH Guitar") (5 "PS2 Guitar")} " +"}
                     {sprint "- Slot 1: " {get_btn_from_var $cnt_slot1} " +"}
                     {sprint "- Slot 2: " {get_btn_from_var $cnt_slot2} " +"}
                     {sprint "- Slot 3: " {get_btn_from_var $cnt_slot3} " +"}
                     {sprint "- Slot 4: " {get_btn_from_var $cnt_slot4} " +"}
                     {sprint "- Slot 5: " {get_btn_from_var $cnt_slot5} " +"}
                     {sprint "- Overdrive: " {get_btn_from_var $cnt_star} " +"}
                  )
               }
            }
            {func
               get_btn_from_var
               ($var)
               {switch $var
                  (kPad_L2
                     "LT"
                  )
                  (kPad_L1
                     "LB"
                  )
                  (kPad_R1
                     "RB"
                  )
                  (kPad_R2
                     "RT"
                  )
                  (kPad_X
                     "A"
                  )
                  (kPad_Circle
                     "B"
                  )
                  (kPad_Square
                     "X"
                  )
                  (kPad_Tri
                     "Y"
                  )
                  (kPad_DUp
                     "Up"
                  )
                  (kPad_DDown
                     "Down"
                  )
                  (kPad_DLeft
                     "Left"
                  )
                  (kPad_DRight
                     "Right"
                  )
                  (kPad_L3
                     "LS"
                  )
                  (kPad_R3
                     "RS"
                  )
                  (kPad_Select
                     "Back"
                  )
                  "ERROR"
               }
            }
            {func l_set_slot
               ($var)
               {switch $var
                  (kPad_L1 kPad_L2)
                  (kPad_R1 kPad_L1)
                  (kPad_R2 kPad_R1)
                  (kPad_X kPad_R2)
                  (kPad_Circle kPad_X)
                  (kPad_Square kPad_Circle)
                  (kPad_Tri kPad_Square)
                  (kPad_DUp kPad_Tri)
                  (kPad_DDown kPad_DUp)
                  (kPad_DLeft kPad_DDown)
                  (kPad_DRight kPad_DLeft)
                  (kPad_L3 kPad_DRight)
                  (kPad_R3 kPad_L3)
                  (kPad_Select kPad_R3)
                  kPad_L2
               }
            }
            {func r_set_slot
               ($var)
               {switch $var
                  (kPad_L2 kPad_L1)
                  (kPad_L1 kPad_R1)
                  (kPad_R1 kPad_R2)
                  (kPad_R2 kPad_X)
                  (kPad_X kPad_Circle)
                  (kPad_Circle kPad_Square)
                  (kPad_Square kPad_Tri)
                  (kPad_Tri kPad_DUp)
                  (kPad_DUp kPad_DDown)
                  (kPad_DDown kPad_DLeft)
                  (kPad_DLeft kPad_DRight)
                  (kPad_DRight kPad_L3)
                  (kPad_L3 kPad_R3)
                  (kPad_R3 kPad_Select)
                  kPad_Select
               }
            }
            {func
               set_other_to_lst
               {set [menu] 5}
               {title.lbl set text_token "Other"}
               {channels.lst set_data
                  (
                     {if_else $noselrsrt "Disable Practice Fast Restart: ON" "Disable Practice Fast Restart: OFF"}
                     {if_else {profile_mgr get_overscan} "Overscan: ON" "Overscan: OFF"}
                  )
               }
            }

            {push_back {elem {elem {find $syscfg ui init} $modpanel} 4}
               {`
                  {do
                     {choose.lbl set_showing FALSE}
                     {msg.lbl set text_token "CON Patch by Synchrony"}
                     {set_main_to_lst}
                  }
               }
            }
            {push_back {elem {find $syscfg ui init} $modpanel}
               {`
                  (SELECT_MSG
                     {switch {$component selected_sym}
                        ("Modifiers"
                           {set [menu] 1}
                        )
                        (("Whammy Pitch Bending: ON" "Whammy Pitch Bending: OFF")
                           {set $whammypb {! $whammypb}}
                        )
                        (("Track Muting: ON" "Track Muting: OFF")
                           {set $trkmuting {! $trkmuting}}
                        )
                        (("Infinite Money: ON" "Infinite Money: OFF")
                           {set $yourmonies {! $yourmonies}}
                        )
                        (("Song Title Always: ON" "Song Title Always: OFF")
                           {set $songtitle {! $songtitle}}
                        )
                        (("Show FC Ring: ON" "Show FC Ring: OFF")
                           {set $fcring {! $fcring}}
                        )
                        (("Legacy Bass Streak: ON" "Legacy Bass Streak: OFF")
                           {set $legacybass {! $legacybass}}
                        )
                        (("Auto Kick: ON" "Auto Kick: OFF")
                           {set $autokick {! $autokick}}
                           {unless {modifier_mgr is_modifier_unlocked mod_unlockall}
                              {modifier_mgr unlock_modifier mod_unlockall $player_num}
                           }
                           {if_else $autokick
                              {modifier_mgr activate_modifier mod_unlockall}
                              {modifier_mgr deactivate_modifier mod_unlockall}
                           }
                        )
                        (("No Fail Mode: ON" "No Fail Mode: OFF")
                           {modifier_mgr toggle_modifier_active mod_nofail}
                        )
                        (("Breakneck Speed: ON" "Breakneck Speed: OFF")
                           {modifier_mgr toggle_modifier_active mod_doublespeed}
                        )
                        (("Select Venue Screen: ON" "Select Venue Screen: OFF")
                           {modifier_mgr toggle_modifier_active mod_choose_venue}
                        )
                        (("Performance Mode: ON" "Performance Mode: OFF")
                           {modifier_mgr toggle_modifier_active mod_nohud}
                        )
                        (("New Venues Only: ON" "New Venues Only: OFF")
                           {unless {modifier_mgr is_modifier_unlocked mod_newvenuesonly}
                              {modifier_mgr unlock_modifier mod_newvenuesonly $player_num}
                           }
                           {modifier_mgr toggle_modifier_active mod_newvenuesonly}
                        )
                        (("Stage Mode: ON" "Stage Mode: OFF")
                           {unless {modifier_mgr is_modifier_unlocked mod_demomode}
                              {modifier_mgr unlock_modifier mod_demomode $player_num}
                           }
                           {modifier_mgr toggle_modifier_active mod_demomode}
                        )
                        (("Big Mode: ON" "Big Mode: OFF")
                           {set $bigmode {! $bigmode}}
                        )
                        (("Small World: ON" "Small World: OFF")
                           {set $smallworld {! $smallworld}}
                        )
                        (("Green Day: ON" "Green Day: OFF")
                           {set $greennday {! $greennday}}
                        )
                        (("Hide Chars: ON" "Hide Chars: OFF")
                           {set $hide_chars {! $hide_chars}}
                        )
                        (("Awesomeness Detection: ON" "Awesomeness Detection: OFF")
                           {unless {modifier_mgr is_modifier_unlocked mod_awesome}
                              {modifier_mgr unlock_modifier mod_awesome $player_num}
                           }
                           {modifier_mgr toggle_modifier_active mod_awesome}
                        )
                        ("Speed Settings"
                           {set [pos] 0}
                           {set [menu] 2}
                        )
                        (("Sync Dificulty Speeds: ON" "Sync Dificulty Speeds: OFF")
                           {set $syncdifspeeds {! $syncdifspeeds}}
                        )
                        ("Graphics Settings"
                           {set [pos] 0}
                           {set [menu] 3}
                        )
                        (("Disable Venues: ON" "Disable Venues: OFF")
                           {set $blackbg {! $blackbg}}
                        )
                        (("Depth of Field: ON" "Depth of Field: OFF")
                           {set $fxdof {! $fxdof}}
                        )
                        (("Film Grain: ON" "Film Grain: OFF")
                           {set $scrnoise {! $scrnoise}}
                        )
                        (("Bloom: ON" "Bloom: OFF")
                           {set $scrbloom {! $scrbloom}}
                        )
                        (("Camera Shake: ON" "Camera Shake: OFF")
                           {set $camerashake {! $camerashake}}
                        )
                        (("Motion Blur: ON" "Motion Blur: OFF")
                           {set $mbblend {! $mbblend}}
                        )
                        ("Controller Settings"
                           {set [pos] 0}
                           {set [menu] 4}
                        )
                        (("Second Kick Mapping: ON" "Second Kick Mapping: OFF")
                           {set $secondkick {! $secondkick}}
                        )
                        ("Other"
                           {set [pos] 0}
                           {set [menu] 5}
                        )
                        (("Disable Practice Fast Restart: ON" "Disable Practice Fast Restart: OFF")
                           {set $noselrsrt {! $noselrsrt}}
                        )
                        (("Overscan: ON" "Overscan: OFF")
                           {profile_mgr set_overscan {! {profile_mgr get_overscan}}}
                        )
                     }
                     {switch [menu]
                        (1 {set_modifiers_to_lst})
                        (2 {set_speeds_to_lst})
                        (3 {set_gfx_to_lst})
                        (4 {set_cnt_to_lst})
                        (5 {set_other_to_lst})
                     }
                     {channels.lst set_selected [pos]}
                  )
               }
            }
            {push_back {elem {find $syscfg ui init} $modpanel}
               {`
                  (SCROLL_MSG
                     {set [pos] {channels.lst selected_pos}}
                     {unless [menu]
                        {set [ret] {channels.lst selected_pos}}
                     }
                  )
               }
            }
            {push_back {elem {find $syscfg ui init} $modpanel}
               {`
                  (BUTTON_DOWN_MSG
                     {switch $action
                        (kAction_Cancel
                           {synth play button_back}
                           {if_else [menu]
                              {set_main_to_lst}
                              {ui goto_screen main_community_screen}
                           }
                        )
                        (kAction_Left
                           {switch [menu]
                              (2
                                 {switch [pos]
                                    (1
                                       {if {> $speedmod 1}
                                          {set $speedmod
                                             {- $speedmod 0.05}
                                          }
                                       }
                                    )
                                    (2
                                       {if {> $trackspeed 0.55}
                                          {set $trackspeed
                                             {- $trackspeed 0.05}
                                          }
                                       }
                                    )
                                 }
                                 {set_speeds_to_lst}
                              )
                              (3
                                 {switch [pos]
                                    (1
                                       {set $emulatefps
                                          {switch $emulatefps
                                             (60 30)
                                             (30 24)
                                             (24 15)
                                             (15 12)
                                             (12 6)
                                             1
                                          }
                                       }
                                    )
                                    (2
                                       {set $vsyncrate
                                          {switch $vsyncrate
                                             (4 2)
                                             (2 1)
                                             (1 0)
                                             0
                                          }
                                       }
                                       {rnd set_sync $vsyncrate}
                                    )
                                 }
                                 {set_gfx_to_lst}
                              )
                              (4
                                 {switch [pos]
                                    (1
                                       {set $pad_inst
                                          {switch $pad_inst
                                             (3 2)
                                             (2 1)
                                             1
                                          }
                                       }
                                    )
                                    (2
                                       {set $pad_map
                                          {switch $pad_map
                                             (5 4)
                                             (4 3)
                                             (3 2)
                                             (2 1)
                                             1
                                          }
                                       }
                                       {set_pad_map}
                                    )
                                    (3
                                       {set $cnt_slot1 {l_set_slot $cnt_slot1}}
                                    )
                                    (4
                                       {set $cnt_slot2 {l_set_slot $cnt_slot2}}
                                    )
                                    (5
                                       {set $cnt_slot3 {l_set_slot $cnt_slot3}}
                                    )
                                    (6
                                       {set $cnt_slot4 {l_set_slot $cnt_slot4}}
                                    )
                                    (7
                                       {set $cnt_slot5 {l_set_slot $cnt_slot5}}
                                    )
                                    (8
                                       {set $cnt_star {l_set_slot $cnt_star}}
                                    )
                                 }
                                 {set_cnt_to_lst}
                              )
                           }
                           {channels.lst set_selected [pos]}
                        )
                        (kAction_Right
                           {switch [menu]
                              (2
                                 {switch [pos]
                                    (1
                                       {if {< $speedmod 2.45}
                                          {set $speedmod
                                             {+ $speedmod 0.05}
                                          }
                                       }
                                    )
                                    (2
                                       {if {< $trackspeed 2.45}
                                          {set $trackspeed
                                             {+ $trackspeed 0.05}
                                          }
                                       }
                                    )
                                 }
                                 {set_speeds_to_lst}
                              )
                              (3
                                 {switch [pos]
                                    (1
                                       {set $emulatefps
                                          {switch $emulatefps
                                             (1 6)
                                             (6 12)
                                             (12 15)
                                             (15 24)
                                             (24 30)
                                             60
                                          }
                                       }
                                    )
                                    (2
                                       {set $vsyncrate
                                          {switch $vsyncrate
                                             (1 2)
                                             (2 4)
                                             (4 4)
                                             1
                                          }
                                       }
                                       {rnd set_sync $vsyncrate}
                                    )
                                 }
                                 {set_gfx_to_lst}
                              )
                              (4
                                 {switch [pos]
                                    (1
                                       {set $pad_inst
                                          {switch $pad_inst
                                             (1 2)
                                             (2 3)
                                             3
                                          }
                                       }
                                    )
                                    (2
                                       {set $pad_map
                                          {switch $pad_map
                                             (1 2)
                                             (2 3)
                                             (3 4)
                                             (4 5)
                                             5
                                          }
                                       }
                                       {set_pad_map}
                                    )
                                    (3
                                       {set $cnt_slot1 {r_set_slot $cnt_slot1}}
                                    )
                                    (4
                                       {set $cnt_slot2 {r_set_slot $cnt_slot2}}
                                    )
                                    (5
                                       {set $cnt_slot3 {r_set_slot $cnt_slot3}}
                                    )
                                    (6
                                       {set $cnt_slot4 {r_set_slot $cnt_slot4}}
                                    )
                                    (7
                                       {set $cnt_slot5 {r_set_slot $cnt_slot5}}
                                    )
                                    (8
                                       {set $cnt_star {r_set_slot $cnt_star}}
                                    )
                                 }
                                 {set_cnt_to_lst}
                              )
                           }
                           {channels.lst set_selected [pos]}
                        )
                        kDataUnhandled
                     }
                  )
               }
            }
            ; don't ever touch anything here. it will break very fast.
            {set_elem {find {elem {find $syscfg ui init} {plat_offset 79 0 1}} enter} 1
               {`
                  {do
                     {set_tp_vars}
                     {beatmatch set_kick_autoplay $autokick}
                     {game add_sink $this}
                  }
               }
            }
            {push_back {find {elem {find $syscfg ui init} {plat_offset 79 0 1}} enter}
               {unless {exists fc_bass_callback}
                  {new Object fc_bass_callback ;remove FC groove on bass miss/pass
                     (hit
                        {if {! $bass_firstnote} {set $bass_firstnote TRUE}}
                        {if {! $bass_milosong} {set $bass_milosong TRUE} {set [num_gems_hit] 0} {set [num_gems_miss] 0} {set [num_gems_pass] 0} {set [num_gems_combo] 0}}
                        {$this check_fc}
                        {set [num_gems_hit] {'+' [num_gems_hit] 1}}
                        {set [num_gems_combo] {'+' [num_gems_combo] 1}}
                     )
                     (miss
                        {unless {! $bass_firstnote}
                        {set [num_gems_miss] {'+' [num_gems_miss] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find bass} find streak_meter} star_deploy_stop}}}
                     )
                     (pass
                        {if {! $bass_firstnote} {set $bass_firstnote TRUE}}
                        {if {! $bass_milosong} {set $bass_milosong TRUE} {set [num_gems_hit] 1} {set [num_gems_miss] 1} {set [num_gems_pass] 1} {set [num_gems_combo] 1}}
                        {set [num_gems_pass] {'+' [num_gems_pass] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find bass} find streak_meter} star_deploy_stop}}
                     )
                     (check_fc
                        {$this check_missed}
                        {if {== {'+' [num_gems_pass] [num_gems_miss]} 0}
                           {if $fcring
                              {{{{get_track_panel} find bass} find streak_meter} star_deploy}}}
                     )
                     (check_missed
                        {if {> {'+' [num_gems_miss] [num_gems_pass]} 0}
                           {if $fcring
                              {{{{get_track_panel} find bass} find streak_meter} star_deploy_stop}}}
                     )
                     (num_gems_hit 0)
                     (num_gems_combo 0)
                     (num_gems_miss 0)
                     (num_gems_pass 0)
                  }
                  {new Object fc_guitar_callback ;remove FC groove on guitar miss/pass
                     (hit
                        {if {! $guitar_firstnote} {set $guitar_firstnote TRUE}}
                        {if {! $guitar_milosong} {set $guitar_milosong TRUE} {set [num_gems_hit] 0} {set [num_gems_miss] 0} {set [num_gems_pass] 0} {set [num_gems_combo] 0}}
                        {$this check_fc}
                        {set [num_gems_hit] {'+' [num_gems_hit] 1}}
                        {set [num_gems_combo] {'+' [num_gems_combo] 1}}
                        {unless $legacybass {if {&& {> [num_gems_combo] 29} {! $guitar_groove_active}} {set $guitar_groove_active TRUE} {{{{get_track_panel} find guitar} find BassSuperStreak_ON.trig} trigger}}}
                     )
                     (miss
                        {unless {! $guitar_firstnote}
                        {set [num_gems_miss] {'+' [num_gems_miss] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find guitar} find streak_meter} star_deploy_stop}}}
                     )
                     (pass
                        {if {! $guitar_firstnote} {set $guitar_firstnote TRUE}}
                        {if {! $guitar_milosong} {set $guitar_milosong TRUE} {set [num_gems_hit] 1} {set [num_gems_miss] 1} {set [num_gems_pass] 1} {set [num_gems_combo] 1}}
                        {set [num_gems_pass] {'+' [num_gems_pass] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find guitar} find streak_meter} star_deploy_stop}}
                     )
                     (check_fc
                        {$this check_missed}
                        {if {== {'+' [num_gems_pass] [num_gems_miss]} 0}
                           {if $fcring
                              {{{{get_track_panel} find guitar} find streak_meter} star_deploy}}}
                     )
                     (check_missed
                        {if {> {'+' [num_gems_miss] [num_gems_pass]} 0}
                           {if $fcring
                              {{{{get_track_panel} find guitar} find streak_meter} star_deploy_stop}}}
                        {unless $legacybass {if {&& {< [num_gems_combo] 29} $guitar_groove_active} {set $guitar_groove_active FALSE} {{{{get_track_panel} find guitar} find BassSuperStreak_OFF.trig} trigger}}}
                     )
                     (num_gems_hit 0)
                     (num_gems_combo 0)
                     (num_gems_miss 0)
                     (num_gems_pass 0)
                  }
                  {new Object fc_drum_callback ;remove FC groove on drum miss/pass
                     (hit
                        {if {! $drum_firstnote} {set $drum_firstnote TRUE}}
                        {if {! $drum_milosong} {set $drum_milosong TRUE} {set [num_gems_hit] 0} {set [num_gems_miss] 0} {set [num_gems_pass] 0} {set [num_gems_combo] 0}}
                        {$this check_fc}
                        {set [num_gems_hit] {'+' [num_gems_hit] 1}}
                        {set [num_gems_combo] {'+' [num_gems_combo] 1}}
                        {unless $legacybass  {if {&& {> [num_gems_combo] 29} {! $drum_groove_active}} {set $drum_groove_active TRUE} {{{{get_track_panel} find drum} find BassSuperStreak_ON.trig} trigger}}}
                     )
                     (miss
                        {unless {! $drum_firstnote}
                        {set [num_gems_miss] {'+' [num_gems_miss] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find drum} find streak_meter} star_deploy_stop}}}
                     )
                     (pass
                        {if {! $drum_firstnote} {set $drum_firstnote TRUE}}
                        {if {! $drum_milosong} {set $drum_milosong TRUE} {set [num_gems_hit] 1} {set [num_gems_miss] 1} {set [num_gems_pass] 1} {set [num_gems_combo] 1}}
                        {set [num_gems_pass] {'+' [num_gems_pass] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find drum} find streak_meter} star_deploy_stop}}
                     )
                     (check_fc
                        {$this check_missed}
                        {if {== {'+' [num_gems_pass] [num_gems_miss]} 0}
                           {if $fcring
                              {{{{get_track_panel} find drum} find streak_meter} star_deploy}}}
                     )
                     (check_missed
                        {if {> {'+' [num_gems_miss] [num_gems_pass]} 0}
                           {if $fcring
                              {{{{get_track_panel} find drum} find streak_meter} star_deploy_stop}}}
                        {unless $legacybass {if {&& {< [num_gems_combo] 29} $drum_groove_active} {set $drum_groove_active FALSE} {{{{get_track_panel} find drum} find BassSuperStreak_OFF.trig} trigger}}}
                     )
                     (num_gems_hit 0)
                     (num_gems_combo 0)
                     (num_gems_miss 0)
                     (num_gems_pass 0)
                  }
                  {new Object fc_h2h_0_callback ;remove FC groove on h2h track 0 miss/pass
                     (hit
                        {if {! $h2h_0_firstnote} {set $h2h_0_firstnote TRUE}}
                        {if {! $h2h_0_milosong} {set $h2h_0_milosong TRUE} {set [num_gems_hit] 0} {set [num_gems_miss] 0} {set [num_gems_pass] 0} {set [num_gems_combo] 0}}
                        {$this check_fc}
                        {set [num_gems_hit] {'+' [num_gems_hit] 1}}
                        {set [num_gems_combo] {'+' [num_gems_combo] 1}}
                        {unless {== {{game get_participant_config 0} get_track_sym} bass}
                           {unless $legacybass  {if {&& {> [num_gems_combo] 29} {! $h2h_0_groove_active}} {set $h2h_0_groove_active TRUE} {{{{get_track_panel} find track_0} find BassSuperStreak_ON.trig} trigger}}}
                        }
                     )
                     (miss
                        {unless {! $h2h_0_firstnote}
                        {set [num_gems_miss] {'+' [num_gems_miss] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find track_0} find streak_meter} star_deploy_stop}}}
                     )
                     (pass
                        {if {! $h2h_0_firstnote} {set $h2h_0_firstnote TRUE}}
                        {if {! $h2h_0_milosong} {set $h2h_0_milosong TRUE} {set [num_gems_hit] 1} {set [num_gems_miss] 1} {set [num_gems_pass] 1} {set [num_gems_combo] 1}}
                        {set [num_gems_pass] {'+' [num_gems_pass] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find track_0} find streak_meter} star_deploy_stop}}
                     )
                     (check_fc
                        {$this check_missed}
                        {if {== {'+' [num_gems_pass] [num_gems_miss]} 0}
                           {if $fcring
                              {{{{get_track_panel} find track_0} find streak_meter} star_deploy}}}
                     )
                     (check_missed
                        {if {> {'+' [num_gems_miss] [num_gems_pass]} 0}
                           {if $fcring
                              {{{{get_track_panel} find track_0} find streak_meter} star_deploy_stop}}}
                        {unless $legacybass {if {&& {< [num_gems_combo] 29} $h2h_0_groove_active} {set $h2h_0_groove_active FALSE} {{{{get_track_panel} find track_0} find BassSuperStreak_OFF.trig} trigger}}}
                     )
                     (num_gems_hit 0)
                     (num_gems_combo 0)
                     (num_gems_miss 0)
                     (num_gems_pass 0)
                  }
                  {new Object fc_h2h_1_callback ;remove FC groove on h2h track 1 miss/pass
                     (hit
                        {if {! $h2h_1_firstnote} {set $h2h_1_firstnote TRUE}}
                        {if {! $h2h_1_milosong} {set $h2h_1_milosong TRUE} {set [num_gems_hit] 0} {set [num_gems_miss] 0} {set [num_gems_pass] 0} {set [num_gems_combo] 0}}
                        {$this check_fc}
                        {set [num_gems_hit] {'+' [num_gems_hit] 1}}
                        {set [num_gems_combo] {'+' [num_gems_combo] 1}}
                        {unless {== {{game get_participant_config 0} get_track_sym} bass}
                           {unless $legacybass  {if {&& {> [num_gems_combo] 29} {! $h2h_1_groove_active}} {set $h2h_1_groove_active TRUE} {{{{get_track_panel} find track_1} find BassSuperStreak_ON.trig} trigger}}}
                        }
                     )
                     (miss
                        {unless {! $h2h_0_firstnote}
                        {set [num_gems_miss] {'+' [num_gems_miss] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find track_1} find streak_meter} star_deploy_stop}}}
                     )
                     (pass
                        {if {! $h2h_1_firstnote} {set $h2h_1_firstnote TRUE}}
                        {if {! $h2h_1_milosong} {set $h2h_1_milosong TRUE} {set [num_gems_hit] 1} {set [num_gems_miss] 1} {set [num_gems_pass] 1} {set [num_gems_combo] 1}}
                        {set [num_gems_pass] {'+' [num_gems_pass] 1}}
                        {set [num_gems_combo] 0}
                        {$this check_missed}
                        {if $fcring
                           {{{{get_track_panel} find track_1} find streak_meter} star_deploy_stop}}
                     )
                     (check_fc
                        {$this check_missed}
                        {if {== {'+' [num_gems_pass] [num_gems_miss]} 0}
                           {if $fcring
                              {{{{get_track_panel} find track_1} find streak_meter} star_deploy}}}
                     )
                     (check_missed
                        {if {> {'+' [num_gems_miss] [num_gems_pass]} 0}
                           {if $fcring
                              {{{{get_track_panel} find track_1} find streak_meter} star_deploy_stop}}}
                        {unless $legacybass {if {&& {< [num_gems_combo] 29} $h2h_1_groove_active} {set $h2h_1_groove_active FALSE} {{{{get_track_panel} find track_1} find BassSuperStreak_OFF.trig} trigger}}}
                     )
                     (num_gems_hit 0)
                     (num_gems_combo 0)
                     (num_gems_miss 0)
                     (num_gems_pass 0)
                  }
               }
            }
            {push_back {find {elem {find $syscfg ui init} {plat_offset 79 0 1}} on_extend}
               {`
                  {do
                     {reset_fc_vars}
                     {set_song_speed}
                     {set_tp_vars}
                     {if_else {== {gamemode get player_arrangement} kArrangeH2h}
                        {unless {== {{game get_participant_config 0} get_track_sym} vocals}
                           {beatmatch foreach_active_player $player
                              {if_else {== {$player track} track0}
                                 {$player add_sink fc_h2h_0_callback (hit miss pass check_fc check_missed num_gems_hit num_gems_combo num_gems_miss num_gems_pass)}
                                 {$player add_sink fc_h2h_1_callback (hit miss pass check_fc check_missed num_gems_hit num_gems_combo num_gems_miss num_gems_pass)}
                              }
                           }
                        }
                        {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
                           {switch {$player instrument}
                              (bass {$player add_sink fc_bass_callback (hit miss pass check_fc check_missed num_gems_hit num_gems_combo num_gems_miss num_gems_pass)})
                              (guitar {$player add_sink fc_guitar_callback (hit miss pass check_fc check_missed num_gems_hit num_gems_combo num_gems_miss num_gems_pass)})
                              (drum {$player add_sink fc_drum_callback (hit miss pass check_fc check_missed num_gems_hit num_gems_combo num_gems_miss num_gems_pass)})
                           }
                        }
                     }
                  }
               }
            }
            {set_elem {elem {elem {find $syscfg objects RndDir types mtv_overlay intro_end} 1} 3} 2
               {`
                  {if_else $songtitle
                     {fade.anim set_frame 50}
                     {fade.anim animate}
                  }
               }
            }
            {set_elem {elem {elem {find $syscfg objects RndDir types mtv_overlay setup_text} 1} 2} 1
               {`
                  {if_else {> $speedmod 1}
                     {sprint {song_mgr song_name $song} " (" {int {'+' 0.5 {'*' $speedmod 100}}} "%)"}
                     {song_mgr song_name $song}
                  }
               }
            }
            {set_elem {find {elem {find $syscfg ui init} {plat_offset 257 -6 -3}} set_results} 1
               {`
                  {heading.lbl set_localized
                     {if_else {> $speedmod 1}
                        {sprint {song_mgr song_name {meta_performer completed_song}} " (" {int {'+' 0.5 {'*' $speedmod 100}}} "%)"}
                        {song_mgr song_name {meta_performer completed_song}}
                     }
                  }
               }
            }
            {push_back {find {elem {find $syscfg ui init} {plat_offset 595 -7 -3}} button_down}
               {`
                  {if {&& {== $action kAction_ViewModify} {! $noselrsrt}}
                     {session end_game kRestart}
                  }
               }
            }
            {foreach $panel ({plat_offset 145 -2 1} {plat_offset 167 -2 1})
               {push_back {find {elem {find $syscfg ui init} $panel} enter}
                  {`
                     {unless {== {modifygame.btn get text_token} "Mod Settings"}
                        {do
                           {modifygame.btn set text_token "Mod Settings"}
                           {webcode_ps3.btn set text_token extra_jukebox}
                        }
                     }
                  }
               }
            }
            {push_back {find {elem {find $syscfg ui init} {plat_offset 167 -2 1}} enter}
               {`
                  {do
                     {$this enable webcode_ps3.btn}
                     {webcode_ps3.btn set_showing TRUE}
                  }
               }
            }
            {set_elem {find {elem {find {elem {find $syscfg ui init} {plat_offset 167 -2 1}} component_select} 2} modifygame.btn} 1
               {`
                  {ui goto_screen selchannel_screen}
               }
            }
            {set_elem {find {elem {find {elem {find $syscfg ui init} {plat_offset 167 -2 1}} component_select} 2} webcode_ps3.btn} 1
               {`
                  {do
                     {gamemode set_mode jukebox $player_num}
                     {char_cache cache_update}
                     {$this wait_for_session_ready}
                     {session_mgr add_local_user $player}
                  }
               }
            }
            {push_back {elem {find $syscfg ui init} {plat_offset 728 -8 -4}}
               {`
                  (BUTTON_UP_MSG
                     {switch
                        $raw_button
                        (kPad_L1
                           {beatmatch jump
                              {- {beatmatch get_song_ms} 10000.0}
                           }
                        )
                        (kPad_R1
                           {beatmatch jump
                              {+ {beatmatch get_song_ms} 10000.0}
                           }
                        )
                        (kPad_Square
                           {cycle_free_camera}
                        )
                        (kPad_Tri
                           {toggle_time_paused}
                        )
                        kDataUnhandled
                     }
                  )
               }
            }
            {push_back {find {elem {find $syscfg ui init} {plat_offset 84 1 2}} finish_load}
               {`
                  {do
                     {rnd set_sync $vsyncrate}
                     {if $blackbg
                        {$this set_showing FALSE}
                     }
                     {$world iterate PostProc $p
                        {if {!= $emulatefps 24}
                           {$p set emulate_fps $emulatefps}
                        }
                        {unless $scrnoise {$p set noise_intensity 0}}
                        {unless $mbblend
                           {$p set motion_blur_blend 0}
                           {$p set motion_blur_weight 0}
                        }
                        {unless $scrbloom {$p set bloom_intensity 0}}
                     }
                     {$world iterate WorldDir $wd
                        {$wd iterate BandCamShot $bcs
                           {unless $fxdof
                              {$bcs set use_depth_of_field FALSE}
                           }
                           {unless $camerashake
                              {foreach_int $i 0 {$bcs size (keyframes)}
                                 {$bcs set (keyframes $i shake_noisefreq) {'*' {$bcs get (keyframes $i shake_noisefreq)} 0}}
                                 {$bcs set (keyframes $i shake_noiseamp) {'*' {$bcs get (keyframes $i shake_noiseamp)} 0}}
                                 {$bcs set (keyframes $i shake_maxangle x) {'*' {$bcs get (keyframes $i shake_maxangle x)} 0}}
                                 {$bcs set (keyframes $i shake_maxangle y) {'*' {$bcs get (keyframes $i shake_maxangle y)} 0}}
                              }
                           }
                        }
                        {if $greennday
                           {$wd iterate Mat $m
                              {$m set intensify 1}
                              {$m set color {pack_color 0 1 0}}
                           }
                        }
                        {if $smallworld
                           {$wd iterate Mesh $m
                              {$m set_local_scale 0.5 0.5 0.5}
                           }
                        }
                     }
                     {$world iterate Character $c
                        {if $greennday
                           {$c iterate Mat $m
                              {$m set intensify 1}
                              {$m set color {pack_color 0 1 0}}
                           }
                        }
                        {if $bigmode
                           {$c iterate Mesh $m
                              {$m set_local_scale 2 2 2}
                           }
                        }
                     }
                     {$world iterate CompositeCharacter $cc
                        {if {modifier_mgr is_modifier_active mod_awesome}
                           {$cc iterate Mat $m
                              {if {== $m legs_skin.mat}
                                 {$m set diffuse_tex {{load_objects char/male/outfits/static_naked_textures} find legs_naked_diffuse.tex}}
                                 {$m set specular_map {{load_objects char/male/outfits/static_naked_textures} find legs_naked_spec.tex}}
                              }
                           }
                        }
                        {$cc iterate Mesh $m
                           {if $hide_chars
                              {$m set_showing FALSE}
                           }
                           {if {modifier_mgr is_modifier_active mod_awesome}
                              {if {&& {has_substr {sprint $m} "bikinic"} {<= {strlen {sprint $m}} 22}}
                                 {$m set_showing FALSE}
                              }
                           }
                        }
                     }
                  }
               }
            }
            {push_back {find {elem {find $syscfg ui init} {plat_offset 599 -7 -3}} enter}
               {`
                  {if $yourmonies
                     {do
                        ($user {input_mgr get_user})
                        ($char {$user get_char})
                        {$char set_money 999999999}
                     }
                  }
               }
            }
            ; start of funcs
            {func
               reset_fc_vars
               {set $guitar_milosong FALSE} {set $bass_milosong FALSE} {set $drum_milosong FALSE} {set $h2h_0_milosong FALSE} {set $h2h_1_milosong FALSE}
               {set $guitar_firstnote FALSE} {set $bass_firstnote FALSE} {set $drum_firstnote FALSE} {set $h2h_0_firstnote FALSE} {set $h2h_1_firstnote FALSE}
               {set $guitar_groove_active FALSE} {set $drum_groove_active FALSE} {set $h2h_0_groove_active FALSE} {set $h2h_1_groove_active FALSE}
            }
            {func
               set_pad_map
               {foreach $type (analog dualshock)
                  {set_elem {find $syscfg joypad controller_mapping $type} 1 {switch $pad_map (1 joypad) #ifdef HX_XBOX (2 ro_guitar_xbox) (3 hx_drums_xbox) #else (2 hx_guitar_ps3) (3 hx_drums_ps3) #endif  (4 ro_guitar_ps3) (5 guitar)}}
               }
            }
            {set_pad_map}
            {func
               set_tp_vars
               {{{get_track_panel} loaded_dir} set view_time_easy {* {/ {if_else $syncdifspeeds 1.2 2.4} $trackspeed} {beatmatch music_speed}}} ;implement track speed modifier
               {{{get_track_panel} loaded_dir} set view_time_expert {* {/ 1.2 $trackspeed} {beatmatch music_speed}}}
            }
            {func
               set_song_speed
               {if {&& {> $speedmod 1} {is_leader_local}}
                  {beatmatch set_music_speed $speedmod}
                  {session send_msg_to_all
                     {` 
                        (
                           {do
                              {beatmatch set_music_speed {, $speedmod}}
                              {passive_messages_panel queue_message {sprintf " Song speed set to %d%% by host" {int {+ 0.5 {* {, $speedmod} 100}}}}}
                           }
                        )
                        kNetReliable
                     }
                  }
               }
            }
         {set $patched TRUE}
         {passive_messages_panel queue_message " CON Patch by Synchrony loaded successfully!"}
         {passive_messages_panel queue_message " Mod settings can be adjusted in extras"}
         {passive_messages_panel queue_message " Some scripting uses some elements from RB2/3 Deluxe by MiloHax"}
      }
         TRUE
      }
   )
   (game_origin rb1_dlc)
   (song_id 69420)
   (rating 1)
   (short_version 121562)
   (song_length 247272)
   (extra_authoring lego)
   (album_art TRUE)
   (year_released 2003)
   (album_name "Results May Vary")
   (album_track_number 7)
   (base_points 476817)
)
#endif
